/// <Remark>
/// AUTO-GENERATED FILE.  DO NOT MODIFY.
/// 
/// This class was automatically generated by the
/// C# mavlink generator tool. It should not be modified by hand.
/// </Remark>
namespace MavLinkProtocol
{
    /// <summary>
    ///     MAVLink CRC helper class to calculate and accumulate CRC data!
    /// </summary>
    internal static class MAVLinkCrc
    {
        private const ushort X25InitCrc = 0xffff;

        /// <summary>
        ///     Accumulates the CRC of 1 byte to an existing CRC checksum.
        /// </summary>
        /// <param name="data">1 data byte of which the CRC should be calculated and accumulated to the provided CRC</param>
        /// <param name="crcAccum">CRC to accumulate the data CRC to</param>
        /// <returns>Returns the CRC result of the accumulated CRC</returns>
        internal static ushort CrcAccumulate(byte data, ushort crcAccum)
        {
            data &= 0xff;
            var tmp = data ^ (crcAccum & 0xff);
            tmp ^= (tmp << 4) & 0xff;
            return (ushort)(((crcAccum >> 8) & 0xff) ^ (tmp << 8) ^ (tmp << 3) ^ ((tmp >> 4) & 0xf));
        }

        /// <summary>
        ///     Calculate the CRC for a number of bytes in a buffer
        /// </summary>
        /// <param name="buffer">The buffer of which a CRC should be calculated</param>
        /// <param name="start">The starting index in the buffer</param>
        /// <param name="length">The number of bytes over which the CRC should be calculated</param>
        /// <returns>Calculated CRC for the number of bytes in the provided buffer</returns>
        internal static ushort Calculate(byte[] buffer, ushort start, int length)
        {
            var crcTmp = X25InitCrc;

            for (int i = start; i < start + length; i++)
                crcTmp = CrcAccumulate(buffer[i], crcTmp);

            return crcTmp;
        }
    }
}
