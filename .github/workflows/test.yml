name: test pymavlink

on: [push, pull_request]
# paths:
# - "*"
# - "!README.md" <-- don't rebuild on doc change

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        id: install
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-mock numpy types-PyYAML types-requests types-setuptools types-protobuf pre-commit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sudo apt update
          sudo apt install -y libgtest-dev g++
          
          if [[ ${{ matrix.python-version }} == "2.7" ]] || [[ ${{ matrix.python-version }} == "3.5" ]] || [[ ${{ matrix.python-version }} == "3.6" ]]; then
            SKIP_PRECOMMIT=1
          else
            SKIP_PRECOMMIT=0
          fi
          echo "::set-output name=SKIP_PRECOMMIT::$SKIP_PRECOMMIT"
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - run: npm install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub web ui editor is 127 chars wide
          SELECT=C,E10,E11,E401,E502,E703,E8,E9,F,W191,W291,W292,W293,W391
          flake8 . --count --exit-zero --select=${SELECT} --max-complexity=10 --max-line-length=127 --statistics
      - name: Check pre-commit
        if: steps.install.outputs.SKIP_PRECOMMIT == 0
        run: |
          echo ${{ matrix.python-version }}
          pre-commit run --all-files
      # NOTE: we must do all testing on the installed python package, not
      # on the build tree. Otherwise the testing is invalid and may not
      # indicate the code actually works
      #
      # Set pythonpath

      # install
      - name: Install mavlink message
        run: |
          git clone https://github.com/ArduPilot/mavlink.git
          ln -s $PWD/mavlink/message_definitions ../

      - name: Install pymavlink
        run: |
          python setup.py build install

      - name: Lint generated python code
        run: |
          flake8 --ignore='W503,E203,E501,E741,E713,E722,F841' --statistics dialects/

      - name: Generate messages
        run: |
          ./test_generate_all.sh
      - name : Test generators
        run: |
          ./test_generator.sh

      - name : Test NPM
        run: |
          cd generator/javascript && npm test

      - name: Test with pytest
        run: |
          python -m pytest
