# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Optionally Publish

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install mavlink message
      run: |
        git clone https://github.com/ArduPilot/mavlink.git
        ln -s $PWD/mavlink/message_definitions
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23.3
      env:
        CIBW_SKIP: "cp36-* cp37-* pp*"
        CIBW_BEFORE_BUILD_LINUX: >
          if [ "$(uname -m)" = "i686" ] && grep -q musl /lib/libc.musl-*; then
            apk add --no-cache libxml2-dev libxslt-dev;
          fi
    - name: Check existence of at least one wheel
      run: |
        if [ ! -d wheelhouse ] || [ -z "$(ls -A wheelhouse/*.whl 2>/dev/null)" ]; then
          echo "No wheels found in wheelhouse"
          exit 1
        fi
    - name: Move wheels to dist
      run: |
        mkdir -p dist
        cp wheelhouse/* dist/
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -U wheel
        pip install build
        pip install -U .
    - name: Build sdist
      run: pipx run build --sdist
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*
        if-no-files-found: error
    - name: Publish package
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
